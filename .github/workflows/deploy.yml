
name: Build and Deploy (Docker -> ECR -> EC2)

on:
  push:
    branches: [ master ]
  workflow_dispatch:

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}
  ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }} 
  IMAGE_TAG: ${{ github.sha }}
  PUBLIC_ECR_REGION: us-east-1
  ECR_PUBLIC_REPO: public.ecr.aws/r5p8n8t0/chat.therama.dev

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest

    permissions:
      id-token: write
      contents: read

    steps:
      - name: Capture start time
        run: echo "START_TIME=$(date +%s)" >> $GITHUB_ENV

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_GLOBAL }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_GLOBAL }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR Public
        run: |
          aws ecr-public get-login-password --region ${PUBLIC_ECR_REGION} | \
            docker login --username AWS --password-stdin public.ecr.aws

      - name: Build, tag, and push image to ECR Public
        run: |
          IMAGE_URI=${ECR_PUBLIC_REPO}:${IMAGE_TAG}
          echo "Building image: $IMAGE_URI"
          docker build -t $IMAGE_URI .
          docker push $IMAGE_URI
          echo "image_uri=$IMAGE_URI" >> $GITHUB_OUTPUT

      - name: Upload docker-compose to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          source: "deploy/docker-compose.yml"
          target: "~/chat-therama-deploy"

      - name: Deploy on EC2 via SSH
        uses: appleboy/ssh-action@v1.2.0
        env:
          PUBLIC_ECR_REGION: ${{ env.PUBLIC_ECR_REGION }}
          ECR_PUBLIC_REPO: ${{ env.ECR_PUBLIC_REPO }}
          IMAGE_TAG: ${{ env.IMAGE_TAG }}
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            set -euo pipefail
            mkdir -p ~/chat-therama-deploy
            cd ~/chat-therama-deploy

            # Login to ECR Public on the EC2 host
            aws ecr-public get-login-password --region ${PUBLIC_ECR_REGION} | \
              docker login --username AWS --password-stdin public.ecr.aws

            IMAGE_URI=${ECR_PUBLIC_REPO}:${IMAGE_TAG}
            echo "Pulling $IMAGE_URI"
            docker pull $IMAGE_URI

            # Create .env file for compose
            echo "IMAGE=$IMAGE_URI" > .env

            # Start/Update stack
            docker compose -f docker-compose.yml down || true
            docker compose -f docker-compose.yml up -d

      - name: Log and Update Deployment
        if: always()
        uses: ramaeondev/therama.dev/.github/actions/log-and-update-deployment@master
        with:
          start_time: ${{ env.START_TIME }}
          s3_bucket: ${{ secrets.S3_UPLOAD_BUCKET }}